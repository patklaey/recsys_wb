<?php


/**
 * Implements hook_schema
 */
function recsys_wb_schema() {
  
  $schema['recsys_wb_recommender_evaluation'] = array(
    'description' => 'Table to store evaluation metric of the different recommender algorithms',
    'fields' => array(
      'app_id' => array(
        'description' => 'The recommender app id',
        'type' => 'int',
        'not null' => TRUE
      ),
      'mae' => array(
        'description' => 'The mean average error value',
        'type' => 'float',
        'not null' => TRUE
      ),
      'rmse' => array(
        'description' => 'The root mean squared error value',
        'type' => 'float',
        'not null' => TRUE
      ),
      'mrr' => array(
        'description' => 'The mean reciprocal rank value',
        'type' => 'float',
        'not null' => TRUE
      ),
      'ndgc' => array(
        'description' => 'The normalized DGC value',
        'type' => 'float',
        'not null' => TRUE
      ),
      'predictions' => array(
        'description' => 'The number of prediction records',
        'type' => 'int',
        'not null' => TRUE
      ),
      'time' => array(
        'description' => 'The time spent in seconds for calculating the recommendations',
        'type' => 'int',
        'not null' => TRUE
      ),
    ),
  );
  $schema['recsys_wb_evaluation_run'] = array(
    'description' => 'Saves which algorithms must be evaluated',
    'fields' => array(
      'app_id' => array(
        'description' => 'The recommender app id',
        'type' => 'int',
        'not null' => TRUE
      ),
      'logfile' => array(
        'description' => 'The logfile to write the progress to',
        'type' => 'text',
        'not null' => TRUE
      ),
      'done' => array(
        'description' => '1 if completed, 0 otherwise',
        'type' => 'int',
        'not null' => TRUE
      ),
    ),
  );
  $schema['recsys_wb_tfidf_values'] = array(
    'description' => 'Holds the TFIDF values for the given word ids and documents',
    'fields' => array(
      'app_id' => array(
        'description' => 'The recommender app id',
        'type' => 'int',
        'not null' => TRUE
      ),
      'entity_id' => array(
        'description' => 'The ID of the drupal entity',
        'type' => 'int',
        'not null' => TRUE
      ),
      'word_id' => array(
        'description' => 'The id of the word in the corresponding dictionary',
        'type' => 'int',
        'not null' => TRUE
      ),
      'tfidf_value' => array(
        'description' => 'The TFIDF value of this word',
        'type' => 'float',
        'not null' => TRUE
      ),
      'timestamp' => array(
        'description' => 'Timestamp of the row creation',
        'type' => 'text',
        'not null' => TRUE
      ),
    ),
  );
  return $schema;
}


function recsys_wb_enable() {
    $apps = array(
        // Cosine similarity
        'book_rec_u2u_cosine' => array(
            'title' => t("U2U book recommender (cosine)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'cosine',
                'preference' => 'score'
            ),
        ),
      'book_rec_i2i_cosine' => array(
            'title' => t("I2I book recommender (cosine)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'cosine',
                'preference' => 'score'
            ),
        ),
        'movie_rec_u2u_cosine' => array(
            'title' => t("U2U movie recommender (cosine)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'cosine',
                'preference' => 'score'
            ),
        ),
        'movie_rec_i2i_cosine' => array(
            'title' => t("I2I movie recommender (cosine)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'cosine',
                'preference' => 'score'
            ),
        ),
      // Euclidean similarity
      'book_rec_u2u_euclidean' => array(
            'title' => t("U2U book recommender (euclidean)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'euclidean',
                'preference' => 'score'
            ),
        ),
      'book_rec_i2i_euclidean' => array(
            'title' => t("I2I book recommender (euclidean)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'euclidean',
                'preference' => 'score'
            ),
        ),
        'movie_rec_u2u_euclidean' => array(
            'title' => t("U2U movie recommender (euclidean)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'euclidean',
                'preference' => 'score'
            ),
        ),
        'movie_rec_i2i_euclidean' => array(
            'title' => t("I2I movie recommender (euclidean)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'euclidean',
                'preference' => 'score'
            ),
        ),
      // Pearson similarity
      'book_rec_u2u_pearson' => array(
            'title' => t("U2U book recommender (pearson)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'pearson',
                'preference' => 'score'
            ),
        ),
      'book_rec_i2i_pearson' => array(
            'title' => t("I2I book recommender (pearson)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Book_Rating_demo_train}",
                'fields' => array('UserID','BookID','Rating'),
                'similarity' => 'pearson',
                'preference' => 'score'
            ),
        ),
        'movie_rec_u2u_pearson' => array(
            'title' => t("U2U movie recommender (pearson)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'pearson',
                'preference' => 'score'
            ),
        ),
        'movie_rec_i2i_pearson' => array(
            'title' => t("I2I movie recommender (pearson)"),
            'params' => array(
                'algorithm' => 'item2item',
                'table' => "{Movie_Rating_demo_train}",
                'fields' => array('UserID','MovieID','Rating'),
                'similarity' => 'pearson',
                'preference' => 'score'
            ),
        ),
        'content_rec_cosine' => array(
            'title' => t("Content recommender (cosine)"),
            'params' => array(
                'algorithm' => 'user2user',
                'table' => "{recsys_wb_tfidf_values}",
                'fields' => array('entity_id','word_id','tfidf_value'),
                'similarity' => 'euclidean',
                'preference' => 'score'
            ),
        ),   
    );
    recommender_app_register($apps);
}

function recsys_wb_disable(){
  $apps = array(
    'book_rec_u2u_cosine',
    'book_rec_i2i_cosine',
    'movie_rec_u2u_cosine',
    'movie_rec_i2i_cosine',
    'book_rec_u2u_euclidean',
    'book_rec_i2i_euclidean',
    'movie_rec_u2u_euclidean',
    'movie_rec_i2i_euclidean',
    'book_rec_u2u_pearson',
    'book_rec_i2i_pearson',
    'movie_rec_u2u_pearson',
    'movie_rec_i2i_pearson',
    'content_rec_cosine',
  );
  recommender_app_unregister($apps);
}
